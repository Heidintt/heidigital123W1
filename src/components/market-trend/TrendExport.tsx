
import React from "react";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Download, FileText, Share2 } from "lucide-react";
import { TrendData, AnalysisParams } from "./MarketTrendAnalyzerTool";

interface TrendExportProps {
  data: TrendData[];
  spikeData: any;
  params: AnalysisParams;
}

const TrendExport = ({ data, spikeData, params }: TrendExportProps) => {
  const exportToCSV = () => {
    if (!data.length) return;
    
    const headers = ['Date', ...params.keywords, ...params.keywords.map(k => `${k}_Spike`)];
    const csvData = [headers.join(',')];
    
    data.forEach(row => {
      const values = [
        row.date,
        ...params.keywords.map(k => row[k] || 0),
        ...params.keywords.map(k => {
          const dateSpikes = spikeData[k]?.find((s: any) => s.date === row.date);
          return dateSpikes?.isSpike ? '1' : '0';
        })
      ];
      csvData.push(values.join(','));
    });
    
    const blob = new Blob([csvData.join('\n')], { type: 'text/csv' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `trend_analysis_${new Date().toISOString().split('T')[0]}.csv`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    window.URL.revokeObjectURL(url);
  };

  const generateReport = () => {
    const reportData = {
      analysis_date: new Date().toISOString().split('T')[0],
      parameters: params,
      summary: {
        keywords_analyzed: params.keywords.length,
        data_points: data.length,
        timeframe: params.timeframe,
        geography: params.geo || 'Worldwide'
      },
      spike_summary: params.keywords.map(keyword => ({
        keyword,
        spike_count: spikeData[keyword]?.filter((s: any) => s.isSpike).length || 0
      }))
    };
    
    const blob = new Blob([JSON.stringify(reportData, null, 2)], { type: 'application/json' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `trend_report_${new Date().toISOString().split('T')[0]}.json`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    window.URL.revokeObjectURL(url);
  };

  const shareResults = () => {
    const shareText = `Market Trend Analysis Results:\n` +
      `Keywords: ${params.keywords.join(', ')}\n` +
      `Timeframe: ${params.timeframe}\n` +
      `Geography: ${params.geo || 'Worldwide'}\n` +
      `Generated by Heidi Digital Market Trend Analyzer`;
    
    if (navigator.share) {
      navigator.share({
        title: 'Market Trend Analysis',
        text: shareText,
        url: window.location.href
      });
    } else {
      navigator.clipboard.writeText(shareText);
      // You could add a toast notification here
      alert('Results copied to clipboard!');
    }
  };

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Download className="h-5 w-5 text-green-600" />
          Export & Share Results
        </CardTitle>
        <CardDescription>
          Download your analysis data or share your findings
        </CardDescription>
      </CardHeader>
      <CardContent>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <Button onClick={exportToCSV} variant="outline" className="flex items-center gap-2">
            <FileText className="h-4 w-4" />
            Export CSV
          </Button>
          
          <Button onClick={generateReport} variant="outline" className="flex items-center gap-2">
            <Download className="h-4 w-4" />
            Download Report
          </Button>
          
          <Button onClick={shareResults} variant="outline" className="flex items-center gap-2">
            <Share2 className="h-4 w-4" />
            Share Results
          </Button>
        </div>
        
        <div className="mt-4 p-4 bg-gray-50 rounded-lg">
          <h4 className="font-semibold mb-2">Analysis Summary</h4>
          <div className="text-sm text-gray-600 space-y-1">
            <p><strong>Keywords:</strong> {params.keywords.join(', ')}</p>
            <p><strong>Timeframe:</strong> {params.timeframe}</p>
            <p><strong>Geography:</strong> {params.geo || 'Worldwide'}</p>
            <p><strong>Data Points:</strong> {data.length}</p>
            <p><strong>Spike Threshold:</strong> {params.spikeThreshold}</p>
          </div>
        </div>
      </CardContent>
    </Card>
  );
};

export default TrendExport;
