
import React from "react";
import Layout from "@/components/Layout";
import Hero from "@/components/Hero";
import SectionHeading from "@/components/SectionHeading";
import CallToAction from "@/components/CallToAction";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { 
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue
} from "@/components/ui/select";
import { useState } from "react";
import { Loader2 } from "lucide-react";
import { useToast } from "@/hooks/use-toast";

const ContentGenerator = () => {
  const [prompt, setPrompt] = useState("");
  const [contentType, setContentType] = useState("blog");
  const [tone, setTone] = useState("professional");
  const [isGenerating, setIsGenerating] = useState(false);
  const [generatedContent, setGeneratedContent] = useState("");
  const { toast } = useToast();

  const handleGenerate = () => {
    if (!prompt) {
      toast({
        title: "Error",
        description: "Please enter a prompt",
        variant: "destructive"
      });
      return;
    }

    setIsGenerating(true);
    // Simulate API call
    setTimeout(() => {
      const demoContent = `# ${prompt}\n\nThis is a sample ${contentType} content in a ${tone} tone. In a real implementation, this would be generated by an AI service based on your prompt.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla facilisi. Donec euismod, nisl eget aliquam ultricies, nunc nisl aliquet nunc, quis aliquam nisl nunc eu nisl.\n\nPhasellus euismod, nisl eget aliquam ultricies, nunc nisl aliquet nunc, quis aliquam nisl nunc eu nisl. Donec euismod, nisl eget aliquam ultricies, nunc nisl aliquet nunc, quis aliquam nisl nunc eu nisl.`;
      setGeneratedContent(demoContent);
      setIsGenerating(false);
      toast({
        title: "Success",
        description: "Content generated successfully",
      });
    }, 2000);
  };

  return (
    <Layout>
      <Hero
        title="AI Content Generator"
        subtitle="Create high-quality content in seconds with our AI-powered content generator"
        backgroundImage="https://images.unsplash.com/photo-1620712943543-bcc4688e7485?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&q=80"
      />

      <section className="py-16 px-4 bg-white">
        <div className="container mx-auto">
          <SectionHeading
            title="Create Content Effortlessly"
            subtitle="Transform your ideas into polished content with AI assistance"
            centered
          />

          <div className="max-w-3xl mx-auto mt-12 p-6 bg-gray-50 rounded-lg shadow-sm">
            <div className="space-y-6">
              <div>
                <label htmlFor="prompt" className="block text-sm font-medium text-gray-700 mb-1">
                  What would you like to create?
                </label>
                <Textarea
                  id="prompt"
                  placeholder="Enter a topic or description for your content"
                  value={prompt}
                  onChange={(e) => setPrompt(e.target.value)}
                  className="min-h-[120px]"
                />
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    Content Type
                  </label>
                  <Select value={contentType} onValueChange={setContentType}>
                    <SelectTrigger>
                      <SelectValue placeholder="Select content type" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="blog">Blog Post</SelectItem>
                      <SelectItem value="social">Social Media Post</SelectItem>
                      <SelectItem value="email">Email</SelectItem>
                      <SelectItem value="ad">Advertisement</SelectItem>
                      <SelectItem value="product">Product Description</SelectItem>
                    </SelectContent>
                  </Select>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    Tone
                  </label>
                  <Select value={tone} onValueChange={setTone}>
                    <SelectTrigger>
                      <SelectValue placeholder="Select tone" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="professional">Professional</SelectItem>
                      <SelectItem value="casual">Casual</SelectItem>
                      <SelectItem value="enthusiastic">Enthusiastic</SelectItem>
                      <SelectItem value="informative">Informative</SelectItem>
                      <SelectItem value="persuasive">Persuasive</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
              </div>

              <div className="flex justify-center">
                <Button 
                  onClick={handleGenerate}
                  disabled={isGenerating || !prompt}
                  className="w-full md:w-auto bg-heisocial-blue hover:bg-heisocial-blue/90"
                >
                  {isGenerating ? (
                    <>
                      <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                      Generating...
                    </>
                  ) : (
                    "Generate Content"
                  )}
                </Button>
              </div>
            </div>

            {generatedContent && (
              <div className="mt-8">
                <h3 className="text-lg font-semibold mb-3">Generated Content:</h3>
                <div className="bg-white p-4 rounded border whitespace-pre-wrap font-normal">
                  {generatedContent}
                </div>
                <div className="mt-4 flex justify-end">
                  <Button
                    variant="outline"
                    onClick={() => {
                      navigator.clipboard.writeText(generatedContent);
                      toast({
                        title: "Copied!",
                        description: "Content copied to clipboard"
                      });
                    }}
                    className="mr-2"
                  >
                    Copy to Clipboard
                  </Button>
                  <Button 
                    variant="outline"
                    onClick={() => setGeneratedContent("")}
                  >
                    Clear
                  </Button>
                </div>
              </div>
            )}
          </div>
        </div>
      </section>

      <CallToAction
        title="Ready to Create More Content?"
        description="Explore our other AI tools and resources to enhance your marketing strategy"
        primaryButtonText="Explore AI Tools"
        primaryButtonLink="/solutions/ai-tools"
        secondaryButtonText="View Free Resources"
        secondaryButtonLink="/solutions/free-resources"
        backgroundClass="bg-gradient-to-r from-heisocial-blue to-heisocial-purple"
      />
    </Layout>
  );
};

export default ContentGenerator;
